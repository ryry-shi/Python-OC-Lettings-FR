name: master-push
env: 
  DJANGO_DEBUG: 'False'
  DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  DJANGO_SETTINGS_MODULE: oc_lettings_site.settings
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint_and_test:
    name: Linting, tests & tests coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Python 3.12.2
      uses: actions/setup-python@v3
      with:
        python-version: "3.12.2"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=99 --statistics

    - name: Test with pytest
      run: pytest
      env:
        DJANGO_DEBUG: 'True'

    - name: Test coverage
      run: pytest --cov="." --cov-fail-under=85

  push_to_registry:
    name: Push Docker image to Docker Hub
    needs: lint_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images:  ${{ secrets.DOCKER_HUB_IMAGE }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          file: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_on_heroku:
    name: Deploy repo image to Heroku
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build, Push and Deploy to Heroku # set whatever name you want to this step
        id: heroku
        uses: jctaveras/heroku-deploy@v3.1.0 # use the latest version of the action
        with:
          email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
          api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
          app_name: ${{ secrets.HEROKU_APP_NAME }} # you aplication name
          dockerfile_path: './prod/Dockerfile' # set the path to the folder where the Dockerfile is located
          process_type: 'web'
